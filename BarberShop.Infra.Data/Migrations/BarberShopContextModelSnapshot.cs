// <auto-generated />
using System;
using BarberShop.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarberShop.Infra.Data.Migrations
{
    [DbContext(typeof(BarberShopContext))]
    partial class BarberShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarberShop.Domain.Models.TblBarbershopInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("InstaPage")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id")
                        .HasName("PK__TblBarbe__3213E83F6E0234E6");

                    b.ToTable("TblBarbershopInfos");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblBeforeAfter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AfterImgUrl")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BeforeImgUrl")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id")
                        .HasName("PK__TblBefor__3213E83FAD125F25");

                    b.ToTable("TblBeforeAfters");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblDiscountCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblDiscountCode");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblHairStylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HairStylistLevelId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id")
                        .HasName("PK__TblHairS__3213E83FD7CF83D6");

                    b.HasIndex("HairStylistLevelId");

                    b.ToTable("TblHairStylists");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblHairStylistLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StylistLevel")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id")
                        .HasName("PK__TblHairS__3213E83FA3C6BC8C");

                    b.ToTable("TblHairStylistLevels");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("smallmoney");

                    b.HasKey("Id")
                        .HasName("PK__TblPrice__3213E83FA4E7D200");

                    b.ToTable("TblPrice");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReserveDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ServicePriceRelId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServicePriceRelId");

                    b.HasIndex("UserId");

                    b.ToTable("TblReservation");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PeriodOfTime")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id")
                        .HasName("PK__TblServi__3213E83F26D0962F");

                    b.ToTable("TblServices");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblServicePriceRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HairStylistId")
                        .HasColumnType("int");

                    b.Property<long?>("Price")
                        .HasColumnType("bigint");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TblServi__3213E83F72C9987B");

                    b.HasIndex("HairStylistId");

                    b.HasIndex("ServiceId");

                    b.ToTable("TblServicePriceRels");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id")
                        .HasName("PK__TblSugge__3213E83F16289D30");

                    b.ToTable("TblSuggestions");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Tell")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id")
                        .HasName("PK__TblUsers__3213E83F10259958");

                    b.ToTable("TblUsers");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblWorkPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Title")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id")
                        .HasName("PK__TblWorkP__3213E83F9C53EF76");

                    b.HasIndex(new[] { "ImageUrl" }, "UQ__TblWorkP__372CE60D1D9E51F6")
                        .IsUnique();

                    b.ToTable("TblWorkPhotos");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblHairStylist", b =>
                {
                    b.HasOne("BarberShop.Domain.Models.TblHairStylistLevel", "HairStylistLevel")
                        .WithMany("TblHairStylists")
                        .HasForeignKey("HairStylistLevelId")
                        .HasConstraintName("FK_TblHairStylists_TblHairStylistLevels1");

                    b.Navigation("HairStylistLevel");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblReservation", b =>
                {
                    b.HasOne("BarberShop.Domain.Models.TblServicePriceRel", "ServicePriceRel")
                        .WithMany("TblReservations")
                        .HasForeignKey("ServicePriceRelId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_TblReservation_TblServicePriceRels");

                    b.HasOne("BarberShop.Domain.Models.TblUser", "User")
                        .WithMany("TblReservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_TblReservation_TblUsers");

                    b.Navigation("ServicePriceRel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblServicePriceRel", b =>
                {
                    b.HasOne("BarberShop.Domain.Models.TblHairStylist", "HairStylist")
                        .WithMany("TblServicePriceRels")
                        .HasForeignKey("HairStylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_TblServicePriceRels_TblHairStylists");

                    b.HasOne("BarberShop.Domain.Models.TblService", "Service")
                        .WithMany("TblServicePriceRels")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_TblServicePriceRels_TblServices");

                    b.Navigation("HairStylist");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblHairStylist", b =>
                {
                    b.Navigation("TblServicePriceRels");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblHairStylistLevel", b =>
                {
                    b.Navigation("TblHairStylists");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblService", b =>
                {
                    b.Navigation("TblServicePriceRels");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblServicePriceRel", b =>
                {
                    b.Navigation("TblReservations");
                });

            modelBuilder.Entity("BarberShop.Domain.Models.TblUser", b =>
                {
                    b.Navigation("TblReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
